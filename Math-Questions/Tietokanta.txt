
mysql -u eliot100 -p -h mysql.luntti.net eliot
https://east1-phpmyadmin.dreamhost.com/?hostname=mysql.luntti.net



mysqldump -u [username] -p [password] [databasename] > [backupfile.sql]

CREATE database mathquestions;
USE mathquestions;


CREATE TABLE refs(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   ref VARCHAR(1024),
   www VARCHAR(4096),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 
INSERT INTO refs values(NULL, 'Ylioppilaskoe', 'www.ytl.fi');
INSERT INTO refs values(NULL, 'Catriona Shearer', 'https://twitter.com/Cshearer41');
INSERT INTO refs values(NULL, 'Putnam', 'https://kskedlaya.org/putnam-archive/');
INSERT INTO refs values(NULL, 'Baltian tie', 'https://matematiikkakilpailut.fi/Baltian_tie/');
INSERT INTO refs values(NULL, 'Pythagoraan polku', 'https://matematiikkakilpailut.fi/pythagoras/');
INSERT INTO refs values(NULL, 'https://maol.fi/neljan-tieteen-kisat/vanhat-kilpailutehtavat/');
INSERT INTO refs values(NULL,'Yläkoulun matematiikkakilpailu', 'https://maol.fi/neljan-tieteen-kisat/vanhat-kilpailutehtavat/');
INSERT INTO refs values(NULL, 'Matematiikkaolympialaiset', 'https://matematiikkakilpailut.fi/IMO/');







CREATE TABLE topicsA(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   topic VARCHAR(1024),
   UNIQUE (topic),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 
INSERT INTO topicsA values(NULL, 'Tulon nollasääntö');
INSERT INTO topicsA values(NULL, 'Toisen asteen yhtälön ratkaisukaava');
INSERT INTO topicsA values(NULL, 'Sini-funktio');
INSERT INTO topicsA values(NULL, 'Cosini-funktio');
INSERT INTO topicsA values(NULL, 'Derivaatta');
INSERT INTO topicsA values(NULL, 'Erotusosamäärä');

CREATE TABLE topicsQ(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   topic VARCHAR(1024),
   UNIQUE (topic),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 
INSERT INTO topicsQ values(NULL, 'Tulon nollasääntö');
INSERT INTO topicsQ values(NULL, 'Toisen asteen yhtälön ratkaisukaava');
INSERT INTO topicsQ values(NULL, 'Sini-funktio');
INSERT INTO topicsQ values(NULL, 'Cosini-funktio');
INSERT INTO topicsQ values(NULL, 'Derivaatta');
INSERT INTO topicsQ values(NULL, 'Erotusosamäärä');



CREATE TABLE levels(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   level VARCHAR(1024),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 
INSERT INTO levels values(10, 'Alakoulu' );
INSERT INTO levels values(50, 'Yläkoulu' );
INSERT INTO levels values(100, 'Lukio' );
INSERT INTO levels values(150, 'Yliopisto' );



CREATE TABLE users(
	ID  SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(128), 
	pwd CHAR(255),
	PRIMARY KEY(ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
INSERT INTO users VALUES (NULL, 'user', SHA1("yourGoodPwd") );


CREATE TABLE images(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   namernd VARCHAR(100),
   path VARCHAR(100),
   creator VARCHAR(300),
   copyright VARCHAR(300),
   date  DATETIME, 
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 


CREATE TABLE questions(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   question MEDIUMTEXT,
   qdate DATETIME,
   date DATETIME,
   questionNRO VARCHAR(10),
   link VARCHAR(2048),
   refID SMALLINT UNSIGNED,
   FOREIGN KEY (refID) REFERENCES refs(ID),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 

ALTER TABLE questions
  ADD COLUMN levelID SMALLINT UNSIGNED,
  ADD FOREIGN KEY (levelID) REFERENCES levels(ID) ON DELETE CASCADE;




CREATE TABLE questionImages(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   imageID SMALLINT UNSIGNED,
   questionID SMALLINT UNSIGNED,
   FOREIGN KEY (imageID) REFERENCES images(ID),
   FOREIGN KEY (questionID) REFERENCES questions(ID),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 



***** Below are new tables for solutions


CREATE TABLE solutions(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   solution MEDIUMTEXT,
   date DATETIME,
   qID SMALLINT UNSIGNED, 
   FOREIGN KEY (qID) REFERENCES questions(ID),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 


CREATE TABLE solutionTopics(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   solutionID SMALLINT UNSIGNED,
   topicID SMALLINT UNSIGNED,
   FOREIGN KEY (solutionID) REFERENCES solutions(ID),
   FOREIGN KEY (topicID) REFERENCES topicsA(ID),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 




CREATE TABLE solutionImages(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   imageID SMALLINT UNSIGNED,
   solutionID SMALLINT UNSIGNED,
   FOREIGN KEY (imageID) REFERENCES imagesSol(ID),
   FOREIGN KEY (imageID) REFERENCES solutions(ID),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 




CREATE TABLE questiontopics(
   ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
   questionID SMALLINT UNSIGNED,
   topicID SMALLINT UNSIGNED,
   FOREIGN KEY (questionID) REFERENCES questions(ID),
   FOREIGN KEY (topicID) REFERENCES topicsQ(ID),
   PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8; 

select distinct topicID from questiontopics 
inner join topicsQ on questiontopics.topicID=topicsQ.ID;

select count(*) as lkm from questions;



select * from topicsA
INNER JOIN 
  solutiontopics  on solutiontopics.topicID = topicsA.ID
INNER JOIN 
  solutions on solutions.ID = solutionTopics.solutionID


select * from questions 
INNER JOIN
questiontopics on questions.ID = questiontopics.questionID
INNER JOIN
topicsq on questiontopics.topicID = topicsq.ID
WHERE 
topicsq.topic IN ('Derivaatta', 'sin')


select * from questions 
INNER JOIN
solutions on solutions.qID = questions.ID
INNER JOIN
solutiontopics on solutiontopics.solutionID = solutions.ID 
INNER JOIN
topicsa on topicsa.ID = solutiontopics.topicID
WHERE
topicsa.topic IN ('neliöjuuri')



select  topicsq.topic from topicsq
INNER JOIN
questiontopics on questiontopics.topicID = topicsq.ID
WHERE 
questiontopics.questionID = 6


select refs.ID, ref from questions 
   INNER JOIN
   refs on questions.refID = refs.ID
   GROUP by refs.ID    


select * from questions 
        INNER JOIN
        questionTopics on questions.ID = questionTopics.questionID
        INNER JOIN
        topicsQ on questionTopics.topicID = topicsQ.ID
        WHERE 
        topicsQ.topic IN ()

topicsq: 93, 41
41 => questionID = 23, 45, 57
93 => questionID = 57

select * from questions 
        INNER JOIN
        questionTopics on questions.ID = questionTopics.questionID
        INNER JOIN
        topicsQ on questionTopics.topicID = topicsQ.ID
        WHERE 
        topicsQ.topic IN ("nopeus", "Alkunopeus")
ID = questionID: 57, 23, 45, 57

select * from questions 
        INNER JOIN
        questionTopics on questions.ID = questionTopics.questionID
        INNER JOIN
        topicsQ on questionTopics.topicID = topicsQ.ID
        WHERE 
        topicsQ.topic IN ("nopeus", "Alkunopeus")
        AND
        refID IN (9, 1)


ID = questionID: 57, 23, 45, 57




select * from questions 
        INNER JOIN
        questionTopics on questions.ID = questionTopics.questionID
        INNER JOIN
        topicsQ on questionTopics.topicID = topicsQ.ID
        group by questions.ID
        having count(*) > 1


 select  * from questions 
        INNER JOIN
        solutions on solutions.qID = questions.ID
        INNER JOIN
        solutionTopics on solutionTopics.solutionID = solutions.ID 
        INNER JOIN
        topicsA on topicsA.ID = solutionTopics.topicID
        WHERE
        topicsA.topic IN ("tulo", "aritmeettinen jono")
        group by questions.ID
        having count(*) > 1
        



 select  * from questions 
        INNER JOIN
        solutions on solutions.qID = questions.ID
        INNER JOIN
        solutionTopics on solutionTopics.solutionID = solutions.ID 
        INNER JOIN
        topicsA on topicsA.ID = solutionTopics.topicID
        WHERE
        topic in ("tulo", "aritmeettinen jono")
-> ID: 54


select * from questions 
            INNER JOIN
            questionTopics on questions.ID = questionTopics.questionID
            INNER JOIN
            topicsQ on questionTopics.topicID = topicsQ.ID 
            INNER JOIN 
            levels on levels.ID = questions.levelID
WHERE ( level IN ("Lukio") )